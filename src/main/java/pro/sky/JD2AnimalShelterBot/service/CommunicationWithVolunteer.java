package pro.sky.JD2AnimalShelterBot.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardRemove;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Slf4j
@Service
public class CommunicationWithVolunteer {

    /**
     * –ò–∏–Ω—ä–µ–∫—Ü–∏—è –∫–ª–∞—Å—Å–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private final UserContext userContext;
    private final TelegramBot telegramBot;
    private final CorrespondenceService correspondenceService;
    private final UserService userService;

    /**
     * –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–ø—Ä–æ—Å–∏–≤—à–µ–≥–æ —Å–≤—è–∑—å —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º
     */
    private static final String CALL_VOLUNTEER_MESSAGE = """

            –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∏–∂–µ –í–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—É.
            –í–æ–ª–æ–Ω—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üëá‚úçÔ∏è
            """;

    public CommunicationWithVolunteer(UserContext userContext, TelegramBot telegramBot, CorrespondenceService correspondenceService, UserService userService) {
        this.userContext = userContext;
        this.telegramBot = telegramBot;
        this.correspondenceService = correspondenceService;
        this.userService = userService;
    }

    /**
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–∑–≤–∞—Ç—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞"
     * @param update –æ–±—ä–µ–∫—Ç –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º–º
     */
    public void volunteerButtonHandler(Update update) {
        var chatId = update.getMessage().getChatId();

        if ((userService.getDogUserPhone(chatId) == null && userContext.getUserContext(chatId).contains("dog")) ||
            (userService.getCatUserPhone(chatId) == null && userContext.getUserContext(chatId).contains("cat"))) {
                userService.requestContactDetails(chatId);
                return;
        }

        userContext.setUserContext(chatId, "messageToVolunteer");
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(CALL_VOLUNTEER_MESSAGE);
        message.setReplyMarkup(ReplyKeyboardRemove.builder().removeKeyboard(true).build());//–£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        executeMessage(message);
        log.info("A call volunteer message has been sent to the user " + update.getMessage().getChat().getFirstName() + ", Id: " + chatId);

    }

    /**
     * –ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—à–∏–±–∫–∏
     * @param message  —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    public void executeMessage(SendMessage message){
        try{
            telegramBot.execute(message);
        } catch (TelegramApiException e){
            log.error("Error occurred: " + e.getMessage());
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ–ª–æ–Ω—Ç–µ—Ä—É
     * @param update –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     *
     */
    public void volunteerTextHandler(Update update) {
        var chatId = update.getMessage().getChatId();
        var text = update.getMessage().getText();
        userContext.deleteUserContext(chatId, "messageToVolunteer");
        correspondenceService.sendMessageToVolunteer(chatId, text);
    }
}
